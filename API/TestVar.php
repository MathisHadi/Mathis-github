<?php 
// Test Token

function Test1(){
$file = 'Token.txt';
$f = fopen($file, 'r');
$token = fgets($f);
fclose($f);
function Request($token){
    $ch = curl_init();
    
    curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/me');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
    
    
    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Content-Type: application/json';
    $headers[] = 'Authorization: Bearer ' . $token;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    
    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
      //echo $result;
      return $result;
    }
function TestToken($token){
  echo "\033[34m\n\n TEST DU TOKEN....    \n\n\033[0m";
  
  if ( strlen($token) != 286 || substr(Request($token), 0, 11)== "{\n  \"error\""){
      echo "\033[31m ! Token non conforme !\033[0m\n\n";
    }


 if ( substr(Request($token), 0, 11)== "{\n  \"error\""){
    echo "\033[31m Token Invalid !! \033[0m\n\n";

 }
 else if (substr(Request($token), 0, 13)=="{\n  \"country\""){
    echo "\033[32m |--------------| \n";
    echo " | Token Valide | \n";
    echo " |--------------|\n\033[0m";
    //echo "Token en cours : \n";
    //echo $token."\n";
 }
 else {
  echo "\033[31m Erreur du token inconnu \033[0m\n\n";

 }

}
TestToken($token);
    return $token;
}

function Test2($token){
    $file = 'Profil.txt';
    $f = fopen($file, 'r');
    $user_id = fgets($f);
    fclose($f);

    function Request2($token,$user_id){
        $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/users/'.$user_id.'');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Content-Type: application/json';
    $headers[] = 'Authorization: Bearer '.$token;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
        return $result;
    }

    function TestUserID($token,$user_id){
    //    echo "\n".Request2($token, $user_id)."\n";
        if (substr(Request2($token, $user_id),5,7) == "display"){
           echo "\033[32m |---------------| \n";
                   echo " | UserID Valide | \n";
            echo " |---------------|\n\033[0m";
        }else{
            echo "\033[31m ! USERID non conforme !\033[0m\n\n";

        }
    }
    TestUserID($token, $user_id);
}

function Test3($token){

    $file = 'Playlist.txt';
    $f = fopen($file, 'r');
    $playlist_id = fgets($f);
    fclose($f);

    function Request3($token,$playlist_id){
        // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/playlists/'.$playlist_id.'');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Content-Type: application/json';
    $headers[] = 'Authorization: Bearer '.$token;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
        return $result;
    }

    function TestPlaylist($token,$playlist_id){
        $tab = Request3($token, $playlist_id);
        for ($i = 0; $i < strlen($tab); $i ++){
            if (substr($tab, $i, 13) == "Music Project"){
                echo "\033[32m |-----------------| \n";
                        echo " | Playlist Valide | \n";
                     echo " |-----------------|\n\033[0m";
                return 0;
            }
        }
        echo "\033[31m ! PlaylistID non conforme !\033[0m\n\n";



    }
    TestPlaylist($token, $playlist_id);
}






$token = Test1();
//echo $token;
Test2($token);
Test3($token);


