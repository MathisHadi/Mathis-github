<?php
include('Playlist.php');

$id_song = $Song_Playlist[0][1];

// Obtenir les informations d'une chanson
function Get_Features($token,$id_song){
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/audio-features?ids='.$id_song.'');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Content-Type: application/json';
    $headers[] = 'Authorization: Bearer '.$token;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
    $jsonObj = json_decode($result);
    //echo $jsonObj->track->duration;

    $tab = array();
    $tab[0] = $jsonObj->audio_features[0]->duration_ms; // Durée du morceau
    $tab[1] = $jsonObj->audio_features[0]->danceability; // Score de danceabilité
    $tab[2] = $jsonObj->audio_features[0]->tempo;
    $tab[3] = $jsonObj->audio_features[0]->speechiness;
    $tab[4] = $jsonObj->audio_features[0]->tempo;
    $tab[5] = $jsonObj->audio_features[0]->valence;
    $tab[6] = $jsonObj->audio_features[0]->energy;
    $tab[7] = $jsonObj->audio_features[0]->loudness;
    $tab[8] = $jsonObj->audio_features[0]->instrumentalness;
    $tab[9] = $jsonObj->audio_features[0]->liveness;
    $tab[10] = $jsonObj->audio_features[0]->acousticness;

    return $tab;


}

// Obtenir l'ID de l'artiste avec une musique
function Get_Id_Artist($token,$id_song){
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/tracks/'.$id_song.'?market=FR');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
    
    
    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Content-Type: application/json';
    $headers[] = 'Authorization: Bearer '.$token;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    
    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
    $jsonObj = json_decode($result);
    $res = array();
    $res[0] = $jsonObj->artists[0]->id; // Durée du morceau
    $res[1] = $jsonObj->name; // Durée du morceau
    return $res;
}


// Obtenir le style d'un song
function Get_Style($token,$id_song){
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
$ch = curl_init();
$id_artist = Get_Id_Artist($token, $id_song)[0];
curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/artists/'.$id_artist.'');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


$headers = array();
$headers[] = 'Accept: application/json';
$headers[] = 'Content-Type: application/json';
$headers[] = 'Authorization: Bearer '.$token;
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close($ch);
$genres = array();
$jsonObj = json_decode($result);
foreach ($jsonObj->genres as $genre) {
    $genres[] = $genre;
    }
return $genres;
}

// Concatener toutes les précédentes données
function Get_analysis($token,$id_song){
    $analysis = array();
    $analysis[0] = Get_Id_Artist($token,$id_song)[1];
    $analysis = array_merge($analysis,Get_Features($token,$id_song), Get_Style($token,$id_song));
    return $analysis;
}

print_r(Get_analysis($token, $id_song));

/*
Explication du tableau reçu :
[0] : Nom du morceau
[1] : duration_ms
[2] : danceability
[3] : tempo
[4] : speechiness
[5]: tempo
[6] :  valence
[7] : energy
[8]: loudness
[9] : instrumentalness
[10] : acousticness
[11 et + ] : style de l'artiste

/*


/* EXPLICATION DES VALEURS :
Spotify Audio Features
For every track on their platform, Spotify provides data for thirteen Audio Features.The Spotify Web API developer guide defines them as follows:

Duration: The duration of the track in milliseconds.

Danceability: Describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.

Tempo: The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece, and derives directly from the average beat duration.

Speechiness: This detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value.

Valence: Describes the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).

Energy: Represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale.


Loudness: The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks.


Instrumentalness: Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”.

Liveness: Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live.

Acousticness: A confidence measure from 0.0 to 1.0 of whether the track is acoustic.

*/
