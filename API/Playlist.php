<?php

include('Profil.php');

$file = 'playlist.txt';
$f = fopen($file, 'r');
$playlist_id_main = fgets($f);



function Get_Song_Playliste($token,$playlist_id){
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/playlists/'.$playlist_id.'/tracks?market=FR');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


    $headers = array();
    $headers[] = 'Accept: application/json';
    $headers[] = 'Content-Type: application/json';
    $headers[] = 'Authorization: Bearer ' . $token;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    $result = curl_exec($ch);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
    $tab = array(array());
    $jsonObj = json_decode($result);
    $limit = $jsonObj->total;
    
    for ($i = 0; $i < $limit; $i++) {
        $tab[$i][0] = $jsonObj->items[$i]->track->name ;  // Name
        $tab[$i][1] = $jsonObj->items[$i]->track->id ;  // Song ID
        $tab[$i][2] = $jsonObj->items[$i]->track->artists[0]->name; ;  // Artist   
        $tab[$i][3] = $jsonObj->items[$i]->track->uri; ;  // URI   
            }
    return array($tab,$limit);
        }

        
$Song_Playlist = Get_Song_Playliste($token, $playlist_id_main)[0];
//print_r($Song_Playlist);
function Remove_Track($token,$playlist_id,$uri){
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
$ch = curl_init();

curl_setopt($ch, CURLOPT_URL, 'https://api.spotify.com/v1/playlists/'.$playlist_id.'/tracks');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');

curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"tracks\":[{\"uri\":\"".$uri."\"}]}");

$headers = array();
$headers[] = 'Accept: application/json';
$headers[] = 'Content-Type: application/json';
$headers[] = 'Authorization: Bearer ' . $token;
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close($ch);
}

function Playlist_Non_Vide($token, $playlist_id){
    if ( Get_Song_Playliste($token, $playlist_id)[1] == null) {
        echo "\n\033[33m |----------------------------------| \033[0m\n";
        echo "\033[33m | Pas de musiques dans la playlist |\033[0m\n";
        echo "\033[33m |----------------------------------| \033[0m\n\n";

        return false;
    }
    return true;
}

//Playlist_Non_Vide($token,$playlist_id);


function Remove_All_Track($token,$playlist_id){
    $Song_Playlist = Get_Song_Playliste($token, $playlist_id)[0];
    if (Playlist_Non_Vide($token, $playlist_id) == true) {
        for ($i = 0; $i < sizeof($Song_Playlist); $i++) {
            Remove_Track($token, $playlist_id, $Song_Playlist[$i][3]);
        }
        echo "\n\033[33m |-------------------------------------| \033[0m\n";
        echo "\033[33m | ".sizeof($Song_Playlist)." son(s) supprimé(s) de la playlist |\033[0m\n";
        echo "\033[33m |-------------------------------------| \033[0m\n\n";

    }

}
//Remove_Track($token, $playlist_id, "spotify:track:3D29kjUyWxsT3jUUTtARVQ");
//Remove_All_Track($token, $playlist_id_main);


function Remove_First_Track($token,$playlist_id){
    $Song_Playlist = Get_Song_Playliste($token, $playlist_id)[0];
    if (Playlist_Non_Vide($token, $playlist_id) == true) {
        
        Remove_Track($token, $playlist_id, $Song_Playlist[0][3]);
    
        echo "\n\033[33m |------------------------------------- \033[0m\n";
        echo "\033[33m | ".$Song_Playlist[0][3]." a été supprimé de la playlist \033[0m\n";
        echo "\033[33m |------------------------------------- \033[0m\n\n";

    }

}

//Remove_First_Track($token, $playlist_id_main);




